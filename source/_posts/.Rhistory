library(lubridate)
library(tidyverse)
library(ggplot2)
x <- tribble(
~event, ~date, ~type,
'The Future of Data Analysis', 1962, 'concept',
'Relational Database', 1970, 'system',
'Data science(Peter Naur)', 1974, 'concept',
'Two-Way Communication', 1975, 'concept',
'Exploratory Data Analysis', 1977, 'concept',
'Business Intelligence', 1989, 'system',
'The First Database Report', 1992, 'system',
'The World Wide Web Explodes', 1995, 'system',
'Data Mining and Knowledge Discovery', 1997, 'concept',
'S(ACM Software System Award)', 1998, 'system',
'Statistical Modeling: The Two Cultures', 2001, 'concept',
'Hadoop', 2006, 'system',
'Data scientist', 2008, 'concept',
'NOSQL', 2009, 'system',
'Deep Learning', 2015, 'system',
)
positions <- c(0.5, -0.5, 1.0, -1.0, 1.5, -1.5)
n <- nrow(x)
event <- x |>
mutate(
date = as.Date(paste(x$date, '/01/01', sep ='')),
position = rep_len(positions, length.out = n),
direction = rep_len(directions, length.out = n)
)
rlang::last_trace()
library(lubridate)
library(tidyverse)
library(ggplot2)
x <- tribble(
~event, ~date, ~type,
'The Future of Data Analysis', 1962, 'concept',
'Relational Database', 1970, 'system',
'Data science(Peter Naur)', 1974, 'concept',
'Two-Way Communication', 1975, 'concept',
'Exploratory Data Analysis', 1977, 'concept',
'Business Intelligence', 1989, 'system',
'The First Database Report', 1992, 'system',
'The World Wide Web Explodes', 1995, 'system',
'Data Mining and Knowledge Discovery', 1997, 'concept',
'S(ACM Software System Award)', 1998, 'system',
'Statistical Modeling: The Two Cultures', 2001, 'concept',
'Hadoop', 2006, 'system',
'Data scientist', 2008, 'concept',
'NOSQL', 2009, 'system',
'Deep Learning', 2015, 'system',
)
positions <- c(0.5, -0.5, 1.0, -1.0, 1.5, -1.5)
n <- nrow(x)
event <- x |>
mutate(
date = as.Date(paste(x$date, '/01/01', sep ='')),
position = rep_len(positions, length.out = n)
)
year_dat <- data.frame(
date = seq(from = as.Date('1962-01-01'), to = as.Date('2015-12-31'), by = "1 year")
) |>
mutate(
year = format(date, "%Y")
)
year_dat$year[(1:nrow(year_dat)) %% 2 == 1] <- ''
ggplot(data = event) +
geom_segment(aes(x = date, y = 0, xend = date, yend = position)) +
geom_hline(yintercept = 0, color = "black", linewidth = 1) +
geom_label(
aes(x = date, y = position, label = event, color = type),
show.legend = FALSE
) +
geom_point(aes(x = date, y = 0, color = type),
size = 3, show.legend = FALSE
) +
geom_text(
data = year_dat,
aes(x = date, y = 0, label = year), angle = 45, size = 3.5, vjust = 3
) +
theme_void()
year_dat <- data.frame(
date = seq(from = as.Date('1960-01-01'), to = as.Date('2015-12-31'), by = "1 year")
) |>
mutate(
year = format(date, "%Y")
)
year_dat$year[(1:nrow(year_dat)) %% 2 == 1] <- ''
ggplot(data = event) +
geom_segment(aes(x = date, y = 0, xend = date, yend = position)) +
geom_hline(yintercept = 0, color = "black", linewidth = 1) +
geom_label(
aes(x = date, y = position, label = event, color = type),
show.legend = FALSE
) +
geom_point(aes(x = date, y = 0, color = type),
size = 3, show.legend = FALSE
) +
geom_text(
data = year_dat,
aes(x = date, y = 0, label = year), angle = 45, size = 3.5, vjust = 3
) +
theme_void()
year_dat <- data.frame(
date = seq(from = as.Date('1960-01-01'), to = as.Date('2016-12-31'), by = "1 year")
) |>
mutate(
year = format(date, "%Y")
)
year_dat$year[(1:nrow(year_dat)) %% 2 == 1] <- ''
ggplot(data = event) +
geom_segment(aes(x = date, y = 0, xend = date, yend = position)) +
geom_hline(yintercept = 0, color = "black", linewidth = 1) +
geom_label(
aes(x = date, y = position, label = event, color = type),
show.legend = FALSE
) +
geom_point(aes(x = date, y = 0, color = type),
size = 3, show.legend = FALSE
) +
geom_text(
data = year_dat,
aes(x = date, y = 0, label = year), angle = 45, size = 3.5, vjust = 3
) +
theme_void()
# input dataset
X <- as.matrix(iris[iris$Species != 'versicolor', 1:4])
# output dataset
y <- c(rep(0, 50), rep(1, 50))
sigmoid <- function(x){
1/(1 + exp(-x))
}
w <- rnorm(4, 0, 0.1)
tmp <- list() # 记录w的变化
for (i in 1:100){
l0 <- X
l1 <- sigmoid(l0 %*% w)
# update weights
w <- w + 0.001 * t(l0) %*% (y - l1)
tmp[[i]] <- w
}
l1
table(l1 > 0.5, y)
## Coef's solution path
ts.plot(t(do.call(cbind, tmp)))
table(l1 > 0.5, y)
x = 'abbbbcdefg'
m = regexec('a(b+)', x)  # positions
m
regmatches(x, m)  # substrings
?regexec
